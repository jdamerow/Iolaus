//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2013.10.25 at 09:21:19 AM MST 
//


package edu.asu.lerna.iolaus.domain.queryobject.impl;

import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;

import javax.xml.bind.JAXBElement;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlElementRef;
import javax.xml.bind.annotation.XmlElementRefs;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlType;
import javax.xml.bind.annotation.adapters.XmlAdapter;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import edu.asu.lerna.iolaus.domain.queryobject.IDataset;
import edu.asu.lerna.iolaus.domain.queryobject.INode;
import edu.asu.lerna.iolaus.domain.queryobject.IOperator;
import edu.asu.lerna.iolaus.domain.queryobject.IProperty;


/**
 * <p>Java class for anonymous complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType>
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;choice maxOccurs="unbounded">
 *         &lt;element ref="{http://digitalhps.org/lerna-query-model}property" minOccurs="0"/>
 *         &lt;element ref="{http://digitalhps.org/lerna-query-model}relationship" minOccurs="0"/>
 *         &lt;element ref="{http://digitalhps.org/lerna-query-model}and" minOccurs="0"/>
 *         &lt;element ref="{http://digitalhps.org/lerna-query-model}or" minOccurs="0"/>
 *       &lt;/choice>
 *       &lt;attribute name="return" type="{http://www.w3.org/2001/XMLSchema}boolean" />
 *       &lt;attribute name="id" type="{http://www.w3.org/2001/XMLSchema}string" />
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "", propOrder = {
		"propertyOrRelationshipOrAnd"
})
@XmlRootElement
public class Node implements INode {

	private static final Logger logger = LoggerFactory
			.getLogger(Node.class);

	@XmlElementRefs({
		@XmlElementRef(name = "or", namespace = "http://digitalhps.org/lerna-query-model", type = JAXBElement.class),
		@XmlElementRef(name = "and", namespace = "http://digitalhps.org/lerna-query-model", type = JAXBElement.class),
		@XmlElementRef(name = "relationship", namespace = "http://digitalhps.org/lerna-query-model", type = Relationship.class),
		@XmlElementRef(name = "property", namespace = "http://digitalhps.org/lerna-query-model", type = Property.class)
	})
	protected List<Object> propertyOrRelationshipOrAnd;
	@XmlAttribute(name = "return")
	protected Boolean _return;
	@XmlAttribute(name = "id")
	protected String id;

	/* (non-Javadoc)
	 * @see edu.asu.lerna.iolaus.domain.queryobject.impl.INode#getPropertyOrRelationshipOrAnd()
	 */
	@Override
	public List<Object> getPropertyOrRelationshipOrAnd() {
		if (propertyOrRelationshipOrAnd == null) {
			propertyOrRelationshipOrAnd = new ArrayList<Object>();
		}
		return this.propertyOrRelationshipOrAnd;
	}

	/* (non-Javadoc)
	 * @see edu.asu.lerna.iolaus.domain.queryobject.impl.INode#isReturn()
	 */
	@Override
	public Boolean isReturn() {
		return _return;
	}

	/* (non-Javadoc)
	 * @see edu.asu.lerna.iolaus.domain.queryobject.impl.INode#setReturn(java.lang.Boolean)
	 */
	@Override
	public void setReturn(Boolean value) {
		this._return = value;
	}

	/* (non-Javadoc)
	 * @see edu.asu.lerna.iolaus.domain.queryobject.impl.INode#getId()
	 */
	@Override
	public String getId() {
		return id;
	}

	/* (non-Javadoc)
	 * @see edu.asu.lerna.iolaus.domain.queryobject.impl.INode#setId(java.lang.String)
	 */
	@Override
	public void setId(String value) {
		this.id = value;
	}


	/* (non-Javadoc)
	 * @see edu.asu.lerna.iolaus.domain.queryobject.impl.INode#getNodeDetails(edu.asu.lerna.iolaus.domain.queryobject.impl.Node)
	 */
	@Override
	public void getNodeDetails(edu.asu.lerna.iolaus.domain.queryobject.INode node){
		
		logger.info("Node return status : "+_return);
		List<Object> nodeDetails = node.getPropertyOrRelationshipOrAnd();
		Iterator<Object> nodeDetailsIterator = nodeDetails.iterator();
		int count =0;
		while(nodeDetailsIterator.hasNext()){
			JAXBElement<?> element = (JAXBElement<Object>) nodeDetailsIterator.next();

			if(element.getName().toString().contains("}and")){
				logger.info("We have a AND operator");
				IOperator opAnd = (IOperator) element.getValue();
				opAnd.parseOperator(opAnd);
			}else if(element.getName().toString().contains("}or")){
				logger.info("We have a OR operator");
				IOperator opOr = (IOperator) element.getValue();
				opOr.parseOperator(opOr);
			}else if(element.getName().toString().contains("}Property")){
				logger.info("Found property object");
    			logger.info("Property element : "+element.getClass());
    			IProperty prop = (IProperty) element.getValue();
    			prop.parseProperty(prop);
    		}

			count++;
		}
		logger.info("Count : "+count);

	}

	
    public static class Adapter extends XmlAdapter<Node,INode> {
    	public INode unmarshal(Node v) { return v; }
    	public Node marshal(INode v) { return (Node)v; }
     }
}
