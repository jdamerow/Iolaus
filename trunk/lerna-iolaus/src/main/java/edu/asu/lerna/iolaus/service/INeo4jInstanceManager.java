package edu.asu.lerna.iolaus.service;

import java.io.IOException;
import java.io.UnsupportedEncodingException;
import java.util.List;

import edu.asu.lerna.iolaus.configuration.neo4j.impl.Neo4jRegistry;
import edu.asu.lerna.iolaus.domain.INeo4jInstance;
import edu.asu.lerna.iolaus.domain.implementation.Neo4jInstance;
/**
 * This interface manages the Neo4jInstances. It has methods for adding, deleting, modifying Neo4j instances.
 * @author Karan Kothari
 *
 */
public interface INeo4jInstanceManager {
	
	/**
	 * This method adds a instance to the Neo4jRegistry
	 * @param instance is {@link Neo4jInstance} object
	 * @return the unique instanceId generated by this method. 
	 * @throws UnsupportedEncodingException 
	 */
	abstract String addNeo4jInstance(INeo4jInstance instance) throws UnsupportedEncodingException;
	
	/**
	 * This method takes a instanceId and deletes that instance from registry.
	 * @param instanceId is a id of instance which ADMIN wants to delete
	 * @throws UnsupportedEncodingException
	 */
	abstract void deleteNeo4jInstance(String instanceId) throws UnsupportedEncodingException;
	
	/**
	 * This method gets the list of all Neo4jinstances from {@link Neo4jRegistry}
	 * @return the list of INeo4jInstance
	 */
	abstract List<INeo4jInstance> getAllInstances();

	abstract String getJsonOfInstances();
	
	/**
	 * This method takes a instanceId and returns {@link INeo4jInstance}
	 * @param id is instance id.
	 * @return Neo4jInstance object corresponding to the id
	 */
	abstract INeo4jInstance getInstance(String id);
	
	/**
	 * This method takes the object of {@link INeo4jInstance} and updates it. 
	 * @param instance object of {@link INeo4jInstance}
	 * @return  the update code
	 * @throws IOException 
	 * @throws UnsupportedEncodingException 
	 */
	abstract int updateNeo4jInstance(INeo4jInstance instance) throws UnsupportedEncodingException, IOException;
	
	/**
	 * This method takes port number and host as input and returns the corresponding instance id.
	 * @param port is a port number.
	 * @param host is address of host machine
	 * @return the instance id
	 */
	abstract String getInstanceId(String port, String host);

	List<INeo4jInstance> getActiveInstances();

	boolean isNeo4jInstanceRunning(String instanceId);
}
