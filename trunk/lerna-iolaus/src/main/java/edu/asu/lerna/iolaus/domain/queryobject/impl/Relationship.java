//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2013.10.25 at 09:21:19 AM MST 
//


package edu.asu.lerna.iolaus.domain.queryobject.impl;

import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;

import javax.xml.bind.JAXBElement;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlElementRef;
import javax.xml.bind.annotation.XmlElementRefs;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlType;
import javax.xml.bind.annotation.adapters.XmlAdapter;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import edu.asu.lerna.iolaus.domain.queryobject.IOperator;
import edu.asu.lerna.iolaus.domain.queryobject.IProperty;
import edu.asu.lerna.iolaus.domain.queryobject.IRelationship;


/**
 * <p>Java class for anonymous complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType>
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;choice maxOccurs="unbounded">
 *         &lt;element ref="{http://digitalhps.org/lerna-query-model}source" minOccurs="0"/>
 *         &lt;element ref="{http://digitalhps.org/lerna-query-model}target" minOccurs="0"/>
 *         &lt;element ref="{http://digitalhps.org/lerna-query-model}property" minOccurs="0"/>
 *         &lt;element ref="{http://digitalhps.org/lerna-query-model}and" minOccurs="0"/>
 *         &lt;element ref="{http://digitalhps.org/lerna-query-model}or" minOccurs="0"/>
 *       &lt;/choice>
 *       &lt;attribute name="return" type="{http://www.w3.org/2001/XMLSchema}boolean" />
 *       &lt;attribute name="id" type="{http://www.w3.org/2001/XMLSchema}string" />
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "", propOrder = {
    "sourceOrTargetOrProperty"
})
@XmlRootElement
public class Relationship implements IRelationship {


	private static final Logger logger = LoggerFactory
			.getLogger(Relationship.class);
	
    @XmlElementRefs({
        @XmlElementRef(name = "source", namespace = "http://digitalhps.org/lerna-query-model", type = JAXBElement.class),
        @XmlElementRef(name = "or", namespace = "http://digitalhps.org/lerna-query-model", type = JAXBElement.class),
        @XmlElementRef(name = "and", namespace = "http://digitalhps.org/lerna-query-model", type = JAXBElement.class),
        @XmlElementRef(name = "property", namespace = "http://digitalhps.org/lerna-query-model", type = Property.class),
        @XmlElementRef(name = "target", namespace = "http://digitalhps.org/lerna-query-model", type = JAXBElement.class)
    })
    protected List<Object> sourceOrTargetOrProperty;
    @XmlAttribute(name = "return")
    protected Boolean _return;
    @XmlAttribute(name = "id")
    protected String id;

    /* (non-Javadoc)
	 * @see edu.asu.lerna.iolaus.domain.queryobject.impl.IRelationship#getSourceOrTargetOrProperty()
	 */
    @Override
	public List<Object> getSourceOrTargetOrProperty() {
        if (sourceOrTargetOrProperty == null) {
            sourceOrTargetOrProperty = new ArrayList<Object>();
        }
        return this.sourceOrTargetOrProperty;
    }

    /* (non-Javadoc)
	 * @see edu.asu.lerna.iolaus.domain.queryobject.impl.IRelationship#isReturn()
	 */
    @Override
	public Boolean isReturn() {
        return _return;
    }

    /* (non-Javadoc)
	 * @see edu.asu.lerna.iolaus.domain.queryobject.impl.IRelationship#setReturn(java.lang.Boolean)
	 */
    @Override
	public void setReturn(Boolean value) {
        this._return = value;
    }

    /* (non-Javadoc)
	 * @see edu.asu.lerna.iolaus.domain.queryobject.impl.IRelationship#getId()
	 */
    @Override
	public String getId() {
        return id;
    }

    /* (non-Javadoc)
	 * @see edu.asu.lerna.iolaus.domain.queryobject.impl.IRelationship#setId(java.lang.String)
	 */
    @Override
	public void setId(String value) {
        this.id = value;
    }

	/* (non-Javadoc)
	 * @see edu.asu.lerna.iolaus.domain.queryobject.impl.IRelationship#getRelationDetails(edu.asu.lerna.iolaus.domain.queryobject.impl.IRelationship)
	 */
	@Override
	public void getRelationDetails(IRelationship relationship){
		logger.info("Relationship return status : "+_return);
		List<Object> relationshipDetails = relationship.getSourceOrTargetOrProperty();
		Iterator<Object> relationshipDetailsIterator = relationshipDetails.iterator();
		int count =0;
		while(relationshipDetailsIterator.hasNext()){

			Object element =relationshipDetailsIterator.next();
    		if(element instanceof Property){
    			logger.info("Found Property here : ");
    			IProperty prop = (IProperty) element;
    			prop.parseProperty(prop);
    		}else if(element instanceof JAXBElement<?>){
    			JAXBElement<?> element1 = (JAXBElement<?>) element;
    			if(element1.getName().toString().contains("}or")){
    				logger.info("We have a OR operator");
    				IOperator opOr = (IOperator) element1.getValue();
    				opOr.parseOperator(opOr);
    			}
    		}
			count++;
		}
		logger.info("Count : "+count);

	}
	
    public static class Adapter extends XmlAdapter<Relationship,IRelationship> {
    	public IRelationship unmarshal(Relationship v) { return v; }
    	public Relationship marshal(IRelationship v) { return (Relationship)v; }

     }
	
}
